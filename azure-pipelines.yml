# Copyright (c) 2019 SakaIT
# Released under the MIT license
# https://gist.github.com/SakaITa/f56d3fa36f567205f21f7816489b82a7

trigger:
- master

pool:
  vmImage: 'vs2017-win2016' 

variables:
  unityProjectPath: '$(System.DefaultWorkingDirectory)/'

steps:
- task: UnityGetProjectVersionTask@1
  displayName: 'Unity Get Project Version'
  name: unityGetProjectVersion
  inputs:
    unityProjectPath: '$(unityProjectPath)'

- task: PowerShell@2
  displayName: 'Install UnitySetup.PowerShell module'
  inputs:
    targetType: 'inline'
    script: 'Install-Module -Name UnitySetup -AllowPrerelease -Scope CurrentUser -Force'
    failOnStderr: true

- task: PowerShell@2
  displayName: 'Install Unity Editor'
  inputs:
    targetType: 'inline'
    script: 'Install-UnitySetupInstance -Installers (Find-UnitySetupInstaller -Version ''$(unitygetprojectversion.projectVersion)'' -Components Windows,UWP,UWP_IL2CPP) -Verbose'

- task: UnityActivateLicenseTask@1
  displayName: 'Unity Activate License'
  inputs:
    username: '$(unityLicense.userName)'
    password: '$(unityLicense.password)'
    serial: '$(unityLicense.serial)'
    unityEditorsPathMode: 'unityHub'
    unityProjectPath: '$(unityProjectPath)'

- task: UnityBuildTask@3
  displayName: 'Unity Build WindowsStoreApps'
  name: 'unityBuild'
  inputs:
    buildTarget: 'WindowsStoreApps'
    unityEditorsPathMode: 'unityHub'
    unityProjectPath: '$(unityProjectPath)'
    #commandLineArgumentsMode: 'default'

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 4.3.0'
  inputs:
    versionSpec: '4.3.0'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    command: 'restore'
    restoreSolution: '$(unityBuild.buildOutputPath)\*.sln'
    feedsToUse: 'select'

- task: VSBuild@1
  displayName: 'Build solution $(unityBuild.buildOutputPath)\*.sln'
  inputs:
    solution: '$(unityBuild.buildOutputPath)\*.sln'
    vsVersion: '15.0'
    msbuildArgs: '/p:AppxBundle=Always;AppxBundlePlatforms="x86"'
    platform: 'x86'
    configuration: 'release'

- task: CopyFiles@2
  displayName: 'Copy AppPackages'
  inputs:
    SourceFolder: '$(unityBuild.buildOutputPath)'
    Contents: '**\AppPackages\**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'